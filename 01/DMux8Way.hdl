// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    DMux4Way(in = in, sel = sel[0..1], a = tmpA, b = tmpB, c = tmpC, d = tmpD);
    DMux4Way(in = in, sel = sel[0..1], a = tmpE, b = tmpF, c = tmpG, d = tmpH);

    Not(in = in, out = notIn);
    And(a = in, b = notIn, out = zero);

    Mux(a = tmpA, b = zero, sel = sel[2], out = a);
    Mux(a = tmpB, b = zero, sel = sel[2], out = b);
    Mux(a = tmpC, b = zero, sel = sel[2], out = c);
    Mux(a = tmpD, b = zero, sel = sel[2], out = d);
    Mux(a = zero, b = tmpE, sel = sel[2], out = e);
    Mux(a = zero, b = tmpF, sel = sel[2], out = f);
    Mux(a = zero, b = tmpG, sel = sel[2], out = g);
    Mux(a = zero, b = tmpH, sel = sel[2], out = h);
}
